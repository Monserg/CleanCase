//
//  FlowControlShowInteractor.swift
//  CleanCase
//
//  Created by msm72 on 02.02.2018.
//  Copyright (c) 2018 msm72. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

// MARK: - Business Logic protocols
protocol FlowControlShowBusinessLogic {
    func doSomething(withRequestModel requestModel: FlowControlShowModels.Something.RequestModel)
}

protocol FlowControlShowDataStore {
//     var name: String { get set }
}

class FlowControlShowInteractor: FlowControlShowBusinessLogic, FlowControlShowDataStore {
    // MARK: - Properties
    var presenter: FlowControlShowPresentationLogic?
    var worker: FlowControlShowWorker?
    
    // ... protocol implementation
//    var name: String = ""
    
    
    // MARK: - Business logic implementation
    func doSomething(withRequestModel requestModel: FlowControlShowModels.Something.RequestModel) {
        worker = FlowControlShowWorker()
        worker?.doSomeWork()
        
        let responseModel = FlowControlShowModels.Something.ResponseModel()
        presenter?.presentSomething(fromResponseModel: responseModel)
    }
}
