//
//  WriteUsShowInteractor.swift
//  CleanCase
//
//  Created by msm72 on 02.02.2018.
//  Copyright (c) 2018 msm72. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Alamofire

// MARK: - Business Logic protocols
protocol WriteUsShowBusinessLogic {
    func sendMessage(withRequestModel requestModel: WriteUsShowModels.Data.RequestModel)
}

protocol WriteUsShowDataStore {
}

class WriteUsShowInteractor: ShareInteractor, WriteUsShowBusinessLogic, WriteUsShowDataStore {
    // MARK: - Properties
    var presenter: WriteUsShowPresentationLogic?
    
    
    // MARK: - Business logic implementation
    func sendMessage(withRequestModel requestModel: WriteUsShowModels.Data.RequestModel) {
        // Prepare request body parameters
        let bodyParams: [String: Any] = [ "message": [ "ClientId": PersonalData.current!.clientId, "LaundryId": Laundry.codeID, "Data": requestModel.message ] ]
        
        // API: Fetch request data
        self.appDependency.restAPIManager.fetchRequest(withRequestType: .sendMessage(bodyParams, true), andResponseType: ResponseAPILaundryResult.self, completionHandler: { [unowned self] response in
            let responseModel = WriteUsShowModels.Data.ResponseModel(error: response.error)
            self.presenter?.presentSendMessage(fromResponseModel: responseModel)
        })
    }
}
