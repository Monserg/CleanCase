//
//  OrderCreateInteractor.swift
//  CleanCase
//
//  Created by msm72 on 02.02.2018.
//  Copyright (c) 2018 msm72. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

// MARK: - Business Logic protocols
protocol OrderCreateBusinessLogic {
    func doSomething(withRequestModel requestModel: OrderCreateModels.Something.RequestModel)
}

protocol OrderCreateDataStore {
    var textFieldsTexts: [ (placeholder: String, errorText: String) ] { get set }
}

class OrderCreateInteractor: ShareInteractor, OrderCreateBusinessLogic, OrderCreateDataStore {
    // MARK: - Properties
    var presenter: OrderCreatePresentationLogic?
    var worker: OrderCreateWorker?
    
    // OrderCreateDataStore protocol implementation
    var textFieldsTexts: [ (placeholder: String, errorText: String) ] = [
        (placeholder: "Enter Phone Number".localized(), errorText: "Please, enter phone number...".localized()),
        (placeholder: "Enter First Name".localized(), errorText: "Please, enter first name...".localized()),
        (placeholder: "Enter Last Name".localized(), errorText: "Please, enter last name...".localized()),
        (placeholder: "Enter Address".localized(), errorText: "Please, enter address...".localized()),
        (placeholder: "Enter Email".localized(), errorText: "Please, enter email...".localized()),
        (placeholder: "Enter Credit Card Number".localized(), errorText: "Please, enter credit card number...".localized()),
        (placeholder: "Enter Credit Card CVV".localized(), errorText: "Please, enter credit card CVV...".localized()),
        (placeholder: "Enter Credit Card Year".localized(), errorText: "Please, enter credit card year...".localized()),
        (placeholder: "Enter Credit Card Month".localized(), errorText: "Please, enter credit card month...".localized())
    ]

    
    // MARK: - Business logic implementation
    func doSomething(withRequestModel requestModel: OrderCreateModels.Something.RequestModel) {
        worker = OrderCreateWorker()
        worker?.doSomeWork()
        
        let responseModel = OrderCreateModels.Something.ResponseModel()
        presenter?.presentSomething(fromResponseModel: responseModel)
    }
}
