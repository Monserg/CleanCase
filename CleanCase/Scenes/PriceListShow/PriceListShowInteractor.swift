//
//  PriceListShowInteractor.swift
//  CleanCase
//
//  Created by msm72 on 02.02.2018.
//  Copyright (c) 2018 msm72. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

// MARK: - Business Logic protocols
protocol PriceListShowBusinessLogic {
    func loadDepartments(withRequestModel requestModel: PriceListShowModels.Department.RequestModel)
    func loadDepartmentItems(withRequestModel requestModel: PriceListShowModels.DepartmentItems.RequestModel)
}

protocol PriceListShowDataStore {
    var departments: [Department]! { get set }
    var departmentItems: [DepartmentItem]! { get set }
}

class PriceListShowInteractor: ShareInteractor, PriceListShowBusinessLogic, PriceListShowDataStore {
    // MARK: - Properties
    var presenter: PriceListShowPresentationLogic?

    // PriceListShowDataStore protocol implementation
    var departments: [Department]!
    var departmentItems: [DepartmentItem]!
    
    // MARK: - Business logic implementation
    func loadDepartments(withRequestModel requestModel: PriceListShowModels.Department.RequestModel) {
        // CoreData
        self.departments = self.appDependency.coreDataManager.readEntities(withName:                    "Department",
                                                                           withPredicateParameters:     nil,    // NSPredicate.init(format: "laundryId == \(Laundry.codeID)"),
                                                                           andSortDescriptor:           NSSortDescriptor.init(key: "departmentName", ascending: true)) as! [Department]
        
        let responseModel = PriceListShowModels.Department.ResponseModel()
        presenter?.presentDepartments(fromResponseModel: responseModel)
    }
    
    func loadDepartmentItems(withRequestModel requestModel: PriceListShowModels.DepartmentItems.RequestModel) {
        let selectedDepartment = self.departments[requestModel.selectedDepartmentRow]

        if let itemsSet = selectedDepartment.items {
            self.departmentItems = Array(itemsSet) as! [DepartmentItem]
        }
        
        let responseModel = PriceListShowModels.DepartmentItems.ResponseModel()
        presenter?.presentDepartmentItems(fromResponseModel: responseModel)
    }
}
