//
//  DeliveryTermsShowInteractor.swift
//  CleanCase
//
//  Created by msm72 on 08.02.2018.
//  Copyright (c) 2018 msm72. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

// MARK: - Business Logic protocols
protocol DeliveryTermsShowBusinessLogic {
    func saveSelectedDateRow(_ value: Int)
    func saveSelectedTimeRow(_ value: Int)
    func fetchData(withRequestModel requestModel: DeliveryTermsShowModels.Data.RequestModel)
}

protocol DeliveryTermsShowDataStore {
    var dates: [PickerViewSupport]! { get set }
    var times: [PickerViewSupport]! { get set }
    var selectedDateRow: Int { get set }
    var selectedTimeRow: Int { get set }

    var textFieldsTexts: [ (placeholder: String, errorText: String) ] { get set }
}

class DeliveryTermsShowInteractor: ShareInteractor, DeliveryTermsShowBusinessLogic, DeliveryTermsShowDataStore {
    // MARK: - Properties
    var presenter: DeliveryTermsShowPresentationLogic?

    
    // DeliveryTermsShowDataStore protocol implementation
    var selectedDateRow: Int = 0
    var selectedTimeRow: Int = 0
    
    var textFieldsTexts: [ (placeholder: String, errorText: String) ] = [
        (placeholder: "Select Delivery Date".localized(), errorText: "Please, select delivery date...".localized()),
        (placeholder: "Select Delivery Time".localized(), errorText: "Please, select delivery time...".localized())
    ]

    var dates: [PickerViewSupport]! = [PickerViewSupport]()
    var times: [PickerViewSupport]! = [PickerViewSupport]()

    
    // MARK: - Business logic implementation
    func saveSelectedDateRow(_ value: Int) {
        self.selectedDateRow = value
    }

    func saveSelectedTimeRow(_ value: Int) {
        self.selectedTimeRow = value
    }

    func fetchData(withRequestModel requestModel: DeliveryTermsShowModels.Data.RequestModel) {
        // CoreData: Fetch data
        if let dateEntities = appDependency.coreDataManager.readEntities(withName: "DeliveryDate", andPredicateParameters: nil), dateEntities.count > 0 {
            
        }
                
        let responseModel = DeliveryTermsShowModels.Data.ResponseModel()
        presenter?.presentData(fromResponseModel: responseModel)
    }
}
