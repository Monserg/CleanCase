//
//  OrderShowInteractor.swift
//  CleanCase
//
//  Created by msm72 on 02.02.2018.
//  Copyright (c) 2018 msm72. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

// MARK: - Business Logic protocols
protocol OrderShowBusinessLogic {
    func loadOrder(withRequestModel requestModel: OrderShowModels.Order.RequestModel)
}

protocol OrderShowDataStore {
    var order: Order! { get set }
    var orderID: Int16! { get set }
}

class OrderShowInteractor: ShareInteractor, OrderShowBusinessLogic, OrderShowDataStore {
    // MARK: - Properties
    var presenter: OrderShowPresentationLogic?
    
    // OrderShowDataStore protocol implementation
    var order: Order!

    var orderID: Int16! {
        didSet {
            order = self.appDependency.coreDataManager.readEntity(withName: "Order",
                                                                  andPredicateParameters: NSPredicate.init(format: "orderID == \(orderID!)")) as! Order
        }
    }
    
    
    // MARK: - Business logic implementation
    func loadOrder(withRequestModel requestModel: OrderShowModels.Order.RequestModel) {

        let responseModel = OrderShowModels.Order.ResponseModel()
        presenter?.presentOrder(fromResponseModel: responseModel)
    }
}
